{
	"info": {
		"_postman_id": "139ba210-abc3-4ad4-8235-306d12f5dbf5",
		"name": "ParcialPractico1",
		"description": "Buy or rent spacecrafts",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15434532"
	},
	"item": [
		{
			"name": "Ciudad",
			"item": [
				{
					"name": "Crear una ciudad v치lida",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"ciudad_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"nombre\": \"Neiva\",\r\n   \"pais\": \"Argentina\",\r\n   \"habitantes\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear una ciudad inv치lida",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"ciudad_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"nombre\": \"Sato Domingo\",\r\n   \"pais\": \"Brasilia\",\r\n   \"habitantes\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener todas las ciudades",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of cities > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener una ciudad por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cities/f4010855-3503-4383-bf92-b4cceae49daf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities",
								"f4010855-3503-4383-bf92-b4cceae49daf"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener una ciudad por un ID que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La ciudad con el id no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cities/f4010855-3503-4383-bf92-b4cceae49d46",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities",
								"f4010855-3503-4383-bf92-b4cceae49d46"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar una ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"nombre\": \"Santo Domingo\",\r\n   \"pais\": \"Argentina\",\r\n   \"habitantes\": 100\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cities/f4010855-3503-4383-bf92-b4cceae49daf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities",
								"f4010855-3503-4383-bf92-b4cceae49daf"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar una ciudad con un ID que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"No se puede Actualizar la Ciudad con el id, este no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"nombre\": \"Santo Domingo\",\r\n   \"pais\": \"Costa Rica\",\r\n   \"habitantes\": 100\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cities/f4010855-3503-4383-bf92-b4cceae56ght",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities",
								"f4010855-3503-4383-bf92-b4cceae56ght"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar una ciudad por su ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cities/f4010855-3503-4383-bf92-b4cceae49daf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities",
								"f4010855-3503-4383-bf92-b4cceae49daf"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar una ciudad con un ID que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"No se puede Eliminar la Ciudad con el id, este no existe\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cities/f4010855-3503-4383-bf92-b4cceae49daf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities",
								"f4010855-3503-4383-bf92-b4cceae49daf"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Supermercado",
			"item": [
				{
					"name": "Crear un supermercado v치lido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"supermercado_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"nombre\": \"supermarkets-d1\",\r\n   \"longitud\": 20,\r\n   \"latitud\": 30,\r\n   \"paginaweb\": \"www.supermarkets-d1.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/supermarkets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"supermarkets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear un supermercado inv치lido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"supermercado_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"nombre\": \"super-d1\",\r\n   \"longitud\": 20,\r\n   \"latitud\": 30,\r\n   \"paginaweb\": \"www.supermarkets-d1.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/supermarkets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"supermarkets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener todos los supermercados",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of supermarkets > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/supermarkets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"supermarkets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener un supermercado por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/supermarkets/edde3b31-b757-484a-ba56-383a0b07bd7d",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"supermarkets",
								"edde3b31-b757-484a-ba56-383a0b07bd7d"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener un supermercado por un ID que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"El Supermercado con el id no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/supermarkets/edde3b31-b757-484a-ba56-383a0b07bd56",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"supermarkets",
								"edde3b31-b757-484a-ba56-383a0b07bd56"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar un supermercado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"nombre\": \"supermarkets-D1\",\r\n   \"longitud\": 45,\r\n   \"latitud\": 83,\r\n   \"paginaweb\": \"www.supermarkets-d1.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/supermarkets/edde3b31-b757-484a-ba56-383a0b07bd7d",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"supermarkets",
								"edde3b31-b757-484a-ba56-383a0b07bd7d"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar un supermercado con un ID que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"No se puede Actualizar el supermercado con el id, este no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"nombre\": \"super-D1\",\r\n   \"longitud\": 45,\r\n   \"latitud\": 83,\r\n   \"paginaweb\": \"www.supermarkets-d1.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/supermarkets/edde3b31-b757-484a-ba56-383a0b07bd56",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"supermarkets",
								"edde3b31-b757-484a-ba56-383a0b07bd56"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar un supermercado por su ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/supermarkets/edde3b31-b757-484a-ba56-383a0b07bd7d",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"supermarkets",
								"edde3b31-b757-484a-ba56-383a0b07bd7d"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar un supermercado con un ID que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"No se puede Eliminar el supermercado con el id, este no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/supermarkets/edde3b31-b757-484a-ba56-383a0b07bd7d",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"supermarkets",
								"edde3b31-b757-484a-ba56-383a0b07bd7d"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Ciuadd-Supermercado",
			"item": [
				{
					"name": "Asociar un nuevo supermercado a una ciudad",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cities-supermarkets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities-supermarkets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Asociar un supermercado que no existe a una ciudad",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cities-supermarkets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities-supermarkets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener todos los supermercados que pertenecen a una ciudad",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cities-supermarkets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities-supermarkets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener un supermercado que no est치 asociado a una ciudad",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cities-supermarkets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities-supermarkets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener un supermercado asociado a una ciudad",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/supermarkets/cities/cities-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"supermarkets",
								"cities",
								"cities-id"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar los supermercados que est치n asociados a una ciudad",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/supermarkets/cities/cities-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"supermarkets",
								"cities",
								"cities-id"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar los supermercados asociados a una ciudad, con un supermercado inexistente",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/supermarkets/cities/cities-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"supermarkets",
								"cities",
								"cities-id"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar un supermercado asociado a una ciudad",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/supermarkets/cities/cities-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"supermarkets",
								"cities",
								"cities-id"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar un supermercado que no estaba previamente asociado a una ciudad",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/supermarkets/cities/cities-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"supermarkets",
								"cities",
								"cities-id"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		}
	]
}